services:
  - name: docker:20.10.20-dind
    alias: docker

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-server:
  stage: build
  variables:
    IMAGE_NAME: server
    # This should come from a combination of ayon_backend + ayon_frontend version
    # https://community.ynput.io/t/ayon-versioning-strategy/528
    IMAGE_TAG: 0.7.0-ax.1
  script:
    - |
      export DOCKERFILE=Dockerfile
      export WORKINGDIR=api
      export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH/$IMAGE_NAME}
      export COMMIT_IMAGE=$CI_APPLICATION_REPOSITORY:${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      export WORKING_IMAGE=$CI_APPLICATION_REPOSITORY:$IMAGE_TAG
    - |
      IMAGE_EXISTS=$(docker manifest inspect $WORKING_IMAGE > /dev/null ; echo $?)
      if [[ $IMAGE_EXISTS -eq 1 ]]; then
        cd $WORKINGDIR && docker build -f $DOCKERFILE -t $COMMIT_IMAGE -t $WORKING_IMAGE .
      else
        docker pull $WORKING_IMAGE
        cd $WORKINGDIR && docker build --cache-from $WORKING_IMAGE -f $DOCKERFILE -t $COMMIT_IMAGE -t $WORKING_IMAGE .
      fi
      docker push $COMMIT_IMAGE
      docker push $WORKING_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
