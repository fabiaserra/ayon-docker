version: "3.7"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ayon"]
      interval: 5s
      timeout: 5s
      retries: 5

    expose: [5432]

    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "db:/var/lib/postgresql/data"

    environment:
      - "POSTGRES_USER=ayon"
      - "POSTGRES_PASSWORD=ayon"
      - "POSTGRES_DB=ayon"

  redis:
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5

    expose: [6379]


  server:
    image: ynput/ayon:dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/info"]
      interval: 10s 
      timeout: 2s
      retries: 3

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

    expose: [5000]
    ports: ["5000:5000"]

    volumes:
      - "./addons:/addons"
      - "./storage:/storage"
      
      # comment out the following line on Windows
      - "/etc/localtime:/etc/localtime:ro"
      
      # uncomment the following line if you need to work on the backend code
      # - "./backend:/backend"

  worker:
    hostname: worker
    image: ynput/ayon-ash:latest
    restart: unless-stopped
    depends_on:
      server:
        condition: service_healthy

    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"

    environment:
      - "AYON_API_KEY=${AYON_API_KEY-veryinsecurapikey}"
      - "AYON_SERVER_URL=${AYON_SERVER_URL-http://localhost:5000}"

volumes:
  db: {}

