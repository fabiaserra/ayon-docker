# Default values for ayon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

affinity: &affinity
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: cpu.coreweave.cloud/family
              operator: In
              values:
                - xeon
            - key: topology.kubernetes.io/region
              operator: In
              values:
                - LGA1
            - key: node.coreweave.cloud/class
              operator: In
              values:
                - cpu

nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This value has to be hardcoded in the seal-secret due to the way the encrypt the data it cannot
# be templated with helm
envSecret: &envSecret "ayon-secrets"

ayon:
  replicaCount: 1
  image:
    repository: dm.tenant-alkemyx.lga1.ingress.coreweave.cloud/coreweave/pipeline/ayon/ayon-docker/alkemyx/ayon-server
    # Managed with CI
    tag: foo
    pullPolicy: Always

  imagePullSecrets: [ ]

  podAnnotations: { }

  podSecurityContext: { }
  # fsGroup: 2000

  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    port: 5000

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    limits:
      cpu: 4
      memory: 8Gi
    requests:
      cpu: 1
      memory: 2Gi

  affinity: *affinity

  existingEnv: *envSecret

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  persistence:
    enabled: true
    storageClass: shared-hdd-lga1
    accessMode: ReadWriteMany
    size: 10Gi
    annotations: { }
    labels:
      backup: "true"
      region: "lga1"
      mount: "workstations"
      role: "shared"
      access: "ro"
      path: "ayon"
    # subPath: ""

  nodeSelector: { }

  tolerations: [ ]

pgbackup:
  image:
    repository: prodrigestivill/postgres-backup-local
    pullPolicy: IfNotPresent
    tag: "15"
  affinity: *affinity
  storageClass: shared-hdd-lga1
  volumeSize: 20Gi
  pvcLabels:
    backup: "true"
    region: "lga1"
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 10m
      memory: 64Mi
  existingEnv: *envSecret

redis:
  enabled: true
  master:
    persistence:
      enabled: false
    affinity: *affinity
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 64Mi
  replica:
    replicaCount: 1
    persistence:
      enabled: false
    affinity: *affinity
    resources:
      limits:
        cpu: 250m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 64Mi
  auth:
    enabled: false

postgresql:
  enabled: true
  primary:
    affinity: *affinity
    persistence:
      storageClass: shared-hdd-lga1
  readReplicas:
    affinity: *affinity
  auth:
    existingSecret: *envSecret
    database: "ayon"
    username: "ayon"
  volumePermissions:
    ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume
    ##
    enabled: true
